


.include "SPC/header.aspc"
.include "SPC/spc.aspc"

.include "SPC/spc.asm"
.DEFINE ZP $80
.DEFINE ZPD $82



.DEFINE SKSHEADER $1500
.DEFINE SKSTRACK $1518
.DEFINE SKSINDEX $1520



.DEFINE RAM 	$FE00
.DEFINE ticks 	RAM+$0000
.DEFINE tmp 	RAM+$0002
.DEFINE toffset RAM+$0004
.DEFINE tpitch 	RAM+$0006
.DEFINE arg 	RAM+$0008

.DEFINE lecture RAM+$0010
.DEFINE offset 	RAM+$0020
.DEFINE mode 	RAM+$0030
.DEFINE poffset RAM+$0038
.DEFINE pitch 	RAM+$0040
.DEFINE volume 	RAM+$0048
.DEFINE eon 	RAM+$0050
.DEFINE pmon 	RAM+$0051
.DEFINE non 	RAM+$0052
.DEFINE kof 	RAM+$0053
.DEFINE aoffset RAM+$0060
.DEFINE roffset RAM+$0070
.DEFINE roffset2 RAM+$0080
.DEFINE first	RAM+$0090

.DEFINE srcn 	RAM+$00A0
.DEFINE gain 	RAM+$00A8
.DEFINE adsr1 	RAM+$00B0
.DEFINE adsr2 	RAM+$00B8

.DEFINE mvolume RAM+$0100
.DEFINE kon 	RAM+$0102
.DEFINE play 	RAM+$0103
.DEFINE ADDRL 	RAM+$0104
.DEFINE ADDRH 	RAM+$0105
.DEFINE emusic 	RAM+$0106
.DEFINE bvolume RAM+$0108
.DEFINE bpitch  RAM+$010A
.DEFINE bkon	RAM+$010C
.DEFINE debug 	RAM+$0110
.DEFINE tmp2	RAM+$0112
.DEFINE init	RAM+$0116
	
.MACRO SPC_INIT_VOICE
	
	mov a,#($10*\1)
	mov !tmp,a
	call !SPC_Init_Voice
	
	
.ENDM

.MACRO SPCWaitMS 

	mov TIMER_0,  #\1 ; $8 = 1 ms
    mov CONTROL, #$01 ; TIMER0 Start

	-:
		
		mov a,COUNTER_0
	beq -
.ENDM

.MACRO SPCRAMClear
	mov a,#$00 
	
	mov y,#\2
	-:
		
		mov !\1+Y,a
	dbnz y,-
	mov !\1,a

.ENDM


Main:
	bra +
	.db "Super Kannagi Sound 0.9"
	+:
	
	call !SPC_Init
	


	WDSP DIR,(sampleDIR >> 8)

	;INIT
	mov a,#0
	mov PORT_0,a
	mov PORT_1,a
	mov PORT_2,a
	mov PORT_3,a
	
	
	mov a,#$30
	mov CONTROL,a
	
	SPCRAMClear RAM+$100,$30
	
	Loop:
		
		mov TIMER_0,#$20 ; $8 = 1 ms
		mov CONTROL,#$01 ; TIMER0 Start
		
		mov a,!play
		cmp a,#LKS_SPC_OFF
		bne +

			;mov a,#KOF
			;mov REG_ADD,a
			
			;mov a,!bkon
			;eor a,#$FF
			;mov REG_DATA,a
		+:

		mov a,!play
		cmp a,#LKS_SPC_ON
		bne +
			WDSP KOF,$00
			call !MIDI_Music
			
		+:
		mov a,!play
		cmp a,#LKS_SPC_LOOP
		bne +
		
			mov a,#LKS_SPC_ON
			mov !play,a
			
			call !Loop_Music
			

		+:
		
		call !effect_sound
		
		;Ticks SNES MIDI (4ms)
		-:
			call !SKS_IO
			mov a,COUNTER_0
		beq -
		
		

	jmp !Loop
	
	
.MACRO SPC_MIDI_TRACK
	
	mov a,!kon
	and a,#$01<<\1
	cmp a,#0
	beq ++
	
	mov a,#\1
	mov !toffset,a
	mov a,!mode+\1
	cmp a,#0
	bne +
		
		call !playsong
		
		bra ++
	+:
		call !playsongend
	
	
	++:
	
	
.ENDM
	
MIDI_Music:
	mov a,!init
	cmp a,#LKS_SPC_OFF
	bne +
		call !Loop_Music
		mov a,#LKS_SPC_ON
		mov !init,a
	+:

	SPC_MIDI_TRACK 0
	SPC_MIDI_TRACK 1
	SPC_MIDI_TRACK 2
	SPC_MIDI_TRACK 3
	SPC_MIDI_TRACK 4
	SPC_MIDI_TRACK 5
	SPC_MIDI_TRACK 6
	SPC_MIDI_TRACK 7
	
	mov a,!ticks
	clrc
	adc a,#1
	mov !ticks,a
	mov a,!ticks+1
	adc a,#0
	mov !ticks+1,a
	
	;if end tick Loop_Music
	mov a,!ticks+1
	cmp a,#$FF
	bne +
		mov a,!ticks
		cmp a,#$FF
		bne +
		call !Loop_Music
	+:

	;end music
	mov a,!ticks+1
	cmp a,!emusic+1
	bne +
	
		mov a,!ticks
		cmp a,!emusic
		bne +
		call !Loop_Music
	+:
	
	;volume
	mov y,!mvolume
	mov a,#MVOLL
	movw REG_ADD,YA
	
	mov y,!mvolume+1
	mov a,#MVOLR
	movw REG_ADD,YA
	
	ret

	
Loop_Music:

	SPC_INIT_VOICE 0
	SPC_INIT_VOICE 1
	SPC_INIT_VOICE 2
	SPC_INIT_VOICE 3
	SPC_INIT_VOICE 4
	SPC_INIT_VOICE 5
	SPC_INIT_VOICE 6
	SPC_INIT_VOICE 7
	
	call !SPC_Init_Header
	call !SPC_Init
	
	SPCRAMClear RAM,$FF
	
	;--------
	
	
	mov a,#0
	mov !toffset,a
	call !upload_offset

	mov a,#1
	mov !toffset,a
	call !upload_offset
	
	mov a,#2
	mov !toffset,a
	call !upload_offset
	
	mov a,#3
	mov !toffset,a
	call !upload_offset
	
	mov a,#4
	mov !toffset,a
	call !upload_offset
	
	mov a,#5
	mov !toffset,a
	call !upload_offset
	
	mov a,#6
	mov !toffset,a
	call !upload_offset
	
	mov a,#7
	mov !toffset,a
	call !upload_offset
	
	ret
	
	.include "SPC/sksio.aspc"
	.include "SPC/playsong.aspc"
	.include "SPC/init.aspc"
	.include "SPC/upload.aspc"
	.include "SPC/function.aspc"
	.include "SPC/set.aspc"

.org $F00
sampleDIR:


/*
PRG : 0x0200 -0x10FF
SampleDIR : 0x1100 - 0x14FF
header : 0x1500 - 0x15FF
track : 0x1600 - 0x3FFF
Sample : 0x4000 - 0xFDFF
RAM : 0xFE00 - 0xFFBF


0x100: 0xBD

*/
